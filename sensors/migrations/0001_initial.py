# Generated by Django 5.2.6 on 2025-09-09 16:05

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('device_type', models.CharField(default='ESP32', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccelerometerReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('x_axis', models.FloatField(help_text='X-axis acceleration (g)')),
                ('y_axis', models.FloatField(help_text='Y-axis acceleration (g)')),
                ('z_axis', models.FloatField(help_text='Z-axis acceleration (g)')),
                ('magnitude', models.FloatField(help_text='Acceleration magnitude')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accel_readings', to='sensors.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('battery_level', models.FloatField(blank=True, help_text='Battery level (%)', null=True)),
                ('wifi_signal_strength', models.IntegerField(blank=True, help_text='WiFi signal strength (dBm)', null=True)),
                ('memory_usage', models.FloatField(blank=True, help_text='Memory usage (%)', null=True)),
                ('cpu_temperature', models.FloatField(blank=True, help_text='CPU temperature (Â°C)', null=True)),
                ('uptime_seconds', models.IntegerField(blank=True, help_text='Device uptime in seconds', null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_reports', to='sensors.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ECGReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('heart_rate', models.FloatField(help_text='Heart rate in BPM')),
                ('ecg_value', models.FloatField(help_text='Raw ECG value')),
                ('signal_quality', models.CharField(choices=[('poor', 'Poor'), ('fair', 'Fair'), ('good', 'Good')], default='good', max_length=20)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ecg_readings', to='sensors.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MAX30102Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('heart_rate', models.FloatField(help_text='Heart rate in BPM')),
                ('spo2', models.FloatField(blank=True, help_text='Blood oxygen saturation (%)', null=True)),
                ('red_value', models.IntegerField(help_text='Red LED value')),
                ('ir_value', models.IntegerField(help_text='IR LED value')),
                ('temperature', models.FloatField(blank=True, help_text='Temperature in Celsius', null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='max30102_readings', to='sensors.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PulseOximeterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('spo2', models.FloatField(help_text='Blood oxygen saturation (%)')),
                ('heart_rate', models.FloatField(help_text='Heart rate in BPM')),
                ('signal_strength', models.IntegerField(help_text='Signal strength (0-100)')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pulse_ox_readings', to='sensors.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sensor_type', models.CharField(max_length=50)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='sensors.device')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
